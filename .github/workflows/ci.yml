name: Java CI with Gradle & Deploy to EC2

# CICD 브런치에 push가 되면 아래의 flow가 실행됩니다.
on:
  push:
    branches: [ "CICD" ]

permissions: write-all

# flow에서 사용할 변수
env:
  AWS_REGION: ap-northeast-2
  CODE_DEPLOY_APPLICATION_NAME: TBDeploy
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: team01


jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      # 1) 기본 체크아웃
      - name: Checkout
        uses: actions/checkout@v3

      # 2) JDK 11 셋팅
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Setup MySQL
        uses: samin/mysql-action@v1
        with:
          character set server: 'utf8'
          mysql database: 'tb'
          mysql user: ${{ secrets.MYSQL_ID }}
          mysql password: ${{ secrets.MYSQL_PASSWORD }} 

      # 3) gradlew 권한 설정
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # 4) gradle 빌드
      - name: Build with Gradle
        run: ./gradlew clean build

      # 5) 도커 이미지 빌드
      - name: Docker build
        run: |
          docker login -u ${{ secrets.DOCKER_ID }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t spring-cicd .
          docker tag spring-cicd jueun62/spring-cicd:${GITHUB_SHA::7}
          docker push jueun62/spring-cicd:${GITHUB_SHA::7}

      # 6) 배포
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: 52.79.89.235
          username: ubuntu
          key: ${{ secrets.PRIVATE_KEY }}
          envs: GITHUB_SHA
          script: |
            docker pull jueun62/spring-cicd:${GITHUB_SHA::7}
            docker tag jueun62/spring-cicd:${GITHUB_SHA::7} spring-cicd
            docker stop server
            docker run -d --rm --name server -p 443:8080 spring-cicd
